{"version":3,"sources":["components/Basic.js","components/AntVG6.js","components/DropMenu.js","components/Modal.js","data/examples.js","hook/useWindowSize.js","App.js","utils/AST2VisData.js","reportWebVitals.js","entrypoint.js"],"names":["Button","styled","button","attrs","className","Header","header","Footer","footer","CardLabelText","span","Title","Input","input","CardContainer","div","CardItem","Card","props","left","right","content","AntVTree","ref","useRef","useState","graph","setGraph","useEffect","current","getBoundingClientRect","width","height","data","render","fitView","tooltip","G6","Tooltip","offsetX","offsetY","getContent","e","outDiv","document","createElement","style","item","getModel","label","attr","innerHTML","itemTypes","tmp_graph","TreeGraph","container","ReactDOM","findDOMNode","linkCenter","modes","default","type","onChange","collapsed","defaultNode","size","anchorPoints","defaultEdge","layout","direction","getId","d","id","getHeight","getWidth","getVGap","getHGap","plugins","node","position","rotate","children","Math","PI","fill","stroke","labelCfg","offset","textAlign","display","flex","classNames","classes","filter","Boolean","join","DropMenu","options","defaultOption","selected","setSelected","value","open","widthClass","name","aria-hidden","show","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Options","static","map","option","Option","active","Modal","visible","cancelButtonRef","handleClose","onClose","Root","initialFocus","Child","Overlay","isWarning","title","whiteSpace","wordWrap","onClick","ExampleOptions","code","useWindowSize","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","debouncedUpdateSize","fn","ms","timer","_","clearTimeout","setTimeout","apply","arguments","debounce","addEventListener","removeEventListener","VisOptions","App","parseTree","setParseTree","AST","setAST","visMode","setVisMode","exampleCode","setExampleCode","editCode","setIsWarning","showError","setShowError","errorTitle","setErrorTitle","errorContent","setErrorContent","windowSize","lastWindowSize","setLastWindowSize","compile","JSON","parse","compile_result","error","ast","toString","remark","node2tree","astNode","nodeList","treeNode","x","assignOperation","leftValue","assignChildren","globalType","globalName","globalAssignment","binaryOperator","lhs","rhs","unaryOperator","unaryExpression","retType","funcName","parameters","funcChildren","functionName","returnType","stringify","funcCallName","funcArguments","Arguments","initClause","condition","iteration","forStatement","InitClause","isDoWhile","whileCondition","whileStatements","console","log","push","AST2VisualizationData","lastWidth","lastHeight","href","src","alt","defaultLanguage","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/3.5233ef83.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button.attrs({\n    className: \"flex flex-grow-0 py-2 px-4 ml-2 font-semibold rounded-lg shadow-md text-white bg-green-500 hover:bg-green-700\"\n})``;\n\nexport const Header = styled.header.attrs({\n    className: \"flex flex-auto\"\n})`\n    height: 17vh;\n`;\n\nexport const Footer = styled.footer.attrs({\n    className: \"flex flex-auto \"\n})`\n    height: 3vh;\n    min-height: 35px;\n`;\n\nexport const CardLabelText = styled.span.attrs({\n    className: \"flex text-white text-3xl object-center font-bold pl-2 pt-1\"\n})``;\n\nexport const Title = styled.span.attrs({\n    className: \"bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-blue-500\"\n})`\n    line-height: 15vh;\n`;\n\nexport const Input = styled.input.attrs({\n    className: \"text-green-900 rounded-lg shadow-md border-2 border-green-500\"\n})``;\n\nconst CardContainer = styled.div.attrs({\n    className: \"flex flex-auto container w-full lg:w-1/3 p-2\"\n})`\n    height: 80vh;\n`;\n\nconst CardItem = styled.div.attrs({\n    className: \"flex flex-auto w-full h-full bg-white rounded-xl shadow-md overflow-hidden\"\n})``;\n\nexport function Card(props) {\n    return (\n        <CardContainer>\n            <CardItem>\n                <div className={'flex flex-auto flex-col h-full'}>\n                    <div className={'flex flex-grow-0 flex-row p-2 bg-green-600'}>\n                        {props.left}\n                        <div className={'flex flex-grow'}/>\n                        {props.right}\n                    </div>\n                    <div className={'flex flex-auto flex-row p-2'}>\n                        {props.content}\n                    </div>\n                </div>\n            </CardItem>\n        </CardContainer>\n    )\n}","import React, {useEffect, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport G6 from '@antv/g6';\n\nexport default function AntVTree(props) {\n    const style = {\n        display: 'flex',\n        flex: '1 1 auto'\n    }\n    const ref = useRef(null);\n    const [graph, setGraph] = useState(null);\n\n    useEffect(() => {\n        const {width, height} = ref.current.getBoundingClientRect()\n        if (!graph) {\n            const tooltip = new G6.Tooltip({\n                offsetX: 10,\n                offsetY: 20,\n                getContent(e) {\n                    const outDiv = document.createElement('div');\n                    outDiv.style.width = '180px';\n                    let content = `<h4><b>${e.item.getModel().label}</b></h4>`\n\n                    if (e.item.getModel().attrs) {\n                        const attrs = e.item.getModel().attrs\n                        content += `<ul>`\n                        for (const attr in attrs) {\n                            content += `<li><b> - ${attr}:</b> ${attrs[attr]}</li>`\n                        }\n                        content += `</ul>`\n                    }\n                    outDiv.innerHTML = content\n                    return outDiv\n                },\n                itemTypes: ['node']\n            });\n            // eslint-disable-next-line\n            let tmp_graph = new G6.TreeGraph({\n                container: ReactDOM.findDOMNode(ref.current),\n                width: width,\n                height: height,\n                linkCenter: true,\n                modes: {\n                    default: [\n                        {\n                            type: 'collapse-expand',\n                            onChange: function onChange(item, collapsed) {\n                                const data = item.getModel();\n                                data.collapsed = collapsed;\n                                return true;\n                            },\n                        },\n                        'drag-canvas',\n                        'zoom-canvas',\n                    ],\n                },\n                defaultNode: {\n                    size: 26,\n                    anchorPoints: [\n                        [0, 0.5],\n                        [1, 0.5],\n                    ],\n                },\n                defaultEdge: {\n                    type: 'cubic-vertical',\n                },\n                layout: {\n                    type: 'compactBox',\n                    direction: 'TB',\n                    getId: function getId(d) {\n                        return d.id;\n                    },\n                    getHeight: function getHeight() {\n                        return 16;\n                    },\n                    getWidth: function getWidth() {\n                        return 16;\n                    },\n                    getVGap: function getVGap() {\n                        return 80;\n                    },\n                    getHGap: function getHGap() {\n                        return 50;\n                    },\n                },\n                plugins: [tooltip],\n            });\n            tmp_graph.node(function (node) {\n                let position = 'right';\n                let rotate = 0;\n                if (!node.children) {\n                    position = 'bottom';\n                    rotate = Math.PI / 2;\n                }\n                return {\n                    style: {\n                        fill: '#ECFDF5',\n                        stroke: '#34D399',\n                    },\n                    label: node.label,\n                    labelCfg: {\n                        position,\n                        offset: 5,\n                        style: {\n                            rotate,\n                            textAlign: 'start',\n                        },\n                    },\n                };\n            });\n            tmp_graph.data(props.data);\n            tmp_graph.render();\n            tmp_graph.fitView();\n            setGraph(tmp_graph);\n        } else {\n            graph.data(props.data);\n            graph.render();\n            graph.fitView();\n        }\n    }, [graph, props.data]);\n\n    return <div style={style} ref={ref}/>;\n}","import {Fragment, useState} from 'react'\nimport {Listbox, Transition} from '@headlessui/react'\nimport {CheckIcon, SelectorIcon} from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function DropMenu(props) {\n    const options = props.options\n    const [selected, setSelected] = useState(props.defaultOption)\n\n    const handleChange = (value) => {\n        setSelected(value)\n        const { onChange } = props\n        onChange?.(value)\n    }\n\n    return (\n        <Listbox value={selected} onChange={handleChange}>\n            {({open}) => (\n                <div className=\"relative\">\n                    <Listbox.Button\n                        className={classNames(props.widthClass, \"relative h-full bg-white border border-gray-300 rounded-lg shadow-sm pl-2 pr-12 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-green-500 focus:border-green-500 sm:text-sm\")}\n                    >\n                            <span className=\"flex items-center\">\n                                <span className=\"ml-3 block truncate\">{selected.name}</span>\n                            </span>\n                        <span\n                            className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\"/>\n                            </span>\n                    </Listbox.Button>\n                    <Transition\n                        show={open}\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                        <Listbox.Options\n                            static\n                            className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-lg py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\"\n                        >\n                            {options.map((option) => (\n                                <Listbox.Option\n                                    key={option.id}\n                                    className={({active}) =>\n                                        classNames(\n                                            active ? 'text-white bg-green-600' : 'text-gray-900',\n                                            'cursor-default select-none relative py-2 pl-3 pr-9'\n                                        )\n                                    }\n                                    value={option}\n                                >\n                                    {({selected, active}) => (\n                                        <>\n                                            <div className=\"flex items-center\">\n                                                <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'ml-3 block truncate')}>{option.name}</span>\n                                            </div>\n                                            {selected ? (\n                                                <span className={classNames(active ? 'text-white' : 'text-green-600',\n                                                        'absolute inset-y-0 right-0 flex items-center pr-4'\n                                                    )}\n                                                >\n                                                    <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\"/>\n                                                </span>\n                                            ) : null}\n                                        </>\n                                    )}\n                                </Listbox.Option>\n                            ))}\n                        </Listbox.Options>\n                    </Transition>\n                </div>\n            )}\n        </Listbox>\n    )\n}\n","import {Fragment, useRef} from 'react'\nimport {Dialog, Transition} from '@headlessui/react'\nimport {ExclamationIcon} from '@heroicons/react/outline'\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function Modal(props) {\n    const open = props.visible\n    const cancelButtonRef = useRef(null)\n\n    const handleClose = (value) => {\n        const {onClose} = props\n        onClose?.(value)\n    }\n\n    return (\n        <Transition.Root show={open} as={Fragment}>\n            <Dialog\n                as=\"div\"\n                static\n                className=\"fixed z-10 inset-0 overflow-y-auto\"\n                initialFocus={cancelButtonRef}\n                open={open}\n                onClose={handleClose}\n            >\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"/>\n                    </Transition.Child>\n\n                    {/* This element is to trick the browser into centering the modal contents. */}\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    >\n                        <div\n                            className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                                <div className=\"sm:flex sm:items-start\">\n                                    <div\n                                        className={classNames(\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full sm:mx-0 sm:h-10 sm:w-10\", props.isWarning ? \"bg-yellow-100\" : \"bg-red-100\")}>\n                                        <ExclamationIcon\n                                            className={classNames(\"h-6 w-6\", props.isWarning ? \"text-yellow-600\" : \"text-red-600\")}\n                                            aria-hidden=\"true\"\n                                        />\n                                    </div>\n                                    <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                                        <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                            {props.title}\n                                        </Dialog.Title>\n                                        <div className=\"mt-2\">\n                                            <div className=\"text-sm text-gray-500\">\n                                                <pre style={{\n                                                    whiteSpace: 'pre-wrap',\n                                                    wordWrap: 'break-word'\n                                                }}>\n                                                    {props.content}\n                                                </pre>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                                <button\n                                    type=\"button\"\n                                    className={classNames(\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\", props.isWarning ? \"focus:ring-yellow-500\" : \"focus:ring-red-500\")}\n                                    onClick={() => handleClose(false)}\n                                    ref={cancelButtonRef}\n                                >\n                                    OK\n                                </button>\n                            </div>\n                        </div>\n                    </Transition.Child>\n                </div>\n            </Dialog>\n        </Transition.Root>\n    )\n}\n","export const ExampleOptions = [\n    {\n        id: 1,\n        name: 'Basic',\n        code: `int main() {\n    return 0;\n}`\n    },\n    {\n        id: 2,\n        name: 'Unary',\n        code: `int neg_unary() {\n    int a = -2;\n    return -a;\n}\n\nint not_unary() {\n    int a = 1;\n    return ~a;\n}\n\nint complement_unary() {\n    int b = !0;\n    int a = !23;\n    return !b;\n}\n`\n    },\n    {\n        id: 3,\n        name: 'Binary',\n        code: `int add() {\n    int a = 2 + 2;\n    return a;\n}\n\nint mul() {\n    int a = 1 + 3 * 4 - 2;\n    return a + 1;\n}\n\nint div() {\n    int b = 2;\n    int a = 3 / b;\n    return b;\n}`\n    },\n    {\n        id: 4,\n        name: 'If Condition',\n        code: `int main() {\n    int a = 0;\n    int b = 1;\n\n    if (a > b) {\n        return 1;\n    } else if (a < b) {\n        return 2;\n    } else {\n        return 3;\n    }\n}`\n    },\n    {\n        id: 5,\n        name: 'For Loop',\n        code: `int main() {\n    int b = 255;\n\n    for (int i = 0; i < b; i += 1) {\n        b -= 1;\n    }\n    return 0;\n}\n`\n    },\n    {\n        id: 6,\n        name: 'While Loop',\n        code: `int main() {\n    int a = 0;\n    int b = 30;\n    int c = 10;\n\n    do {\n        c = b - c;\n    } while (c >= 0);\n\n    while (a < b) {\n        a += 1;\n        b -= 1;\n\n        if (b == 3)\n            break;\n    }\n\n    return 0;\n}`\n    },\n    {\n        id: 7,\n        name: 'Functions',\n        code: `\nint foo(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    return foo(0, 1);\n}\n\nint bar(int a, int b, int c) {\n    int rst = 0;\n    while (a < b) {\n        rst <<= c;\n        a += 1;\n    }\n    return rst;\n}\n`\n    },\n    {\n        id: 8,\n        name: 'Global Variables',\n        code: `int main() {\n    a = 3;\n    return a;\n}\n\nint a  = 0;\n\nint foo() {\n    return 0;\n}\n`\n    }\n]\n","import {useLayoutEffect, useState} from \"react\";\n\nfunction debounce(fn, ms) {\n    let timer\n    return _ => {\n        clearTimeout(timer)\n        timer = setTimeout(_ => {\n            timer = null\n            fn.apply(this, arguments)\n        }, ms)\n    };\n}\n\nexport default function useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        const debouncedUpdateSize = debounce(updateSize, 1000)\n        window.addEventListener('resize', debouncedUpdateSize);\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n","import './App.css';\nimport {useEffect, useState} from \"react\";\nimport {Button, Card, CardLabelText, Footer, Header, Input, Title} from \"./components/Basic\"\nimport MonacoEditor from \"@monaco-editor/react\";\nimport AntVTree from \"./components/AntVG6\";\nimport DropMenu from \"./components/DropMenu\";\nimport Modal from \"./components/Modal\";\nimport {compile_result} from \"gnc\";\nimport AST2VisualizationData from \"./utils/AST2VisData\";\nimport {ExampleOptions} from \"./data/examples\";\nimport useWindowSize from \"./hook/useWindowSize\";\n\nconst VisOptions = [\n    {\n        id: 1,\n        name: 'Parse Tree',\n    },\n    {\n        id: 2,\n        name: 'AST',\n    },\n]\n\nfunction App() {\n    // visualization hooks\n    const [parseTree, setParseTree] = useState({id: '0', label: 'GNC'})\n    const [AST, setAST] = useState({id: '0', label: 'GNC'})\n    const [visMode, setVisMode] = useState(VisOptions[0])\n\n    // code hooks\n    const [exampleCode, setExampleCode] = useState(ExampleOptions[0])\n    const [code, editCode] = useState(exampleCode.code)\n\n    // modal hooks\n    const [isWarning, setIsWarning] = useState(false)\n    const [showError, setShowError] = useState(false)\n    const [errorTitle, setErrorTitle] = useState('')\n    const [errorContent, setErrorContent] = useState('')\n\n    // resize hooks\n    const windowSize = useWindowSize()\n    const [lastWindowSize, setLastWindowSize] = useState([0, 0])\n\n    const compile = () => {\n        let data = JSON.parse(compile_result(code))\n        if (!data.error) {\n            setParseTree(data['parse_tree'])\n            setAST(AST2VisualizationData(data['ast']))\n        } else {\n            setIsWarning(false)\n            setErrorTitle('Compilation Error')\n            setErrorContent(data['error_message'])\n            setShowError(true)\n        }\n    }\n\n    const handleExampleCodeChange = (option) => {\n        setExampleCode(option)\n        editCode(option.code)\n    }\n\n    useEffect(() => {\n        compile()\n        // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        const [lastWidth, lastHeight] = lastWindowSize\n        const [width, height] = windowSize\n        if (width < lastWidth || height < lastHeight) {\n            if (!showError) {\n                setIsWarning(true)\n                setErrorTitle('Detected Window Shrink!')\n                setErrorContent('We detected a window shrink on your browser, please refresh to get better experience.')\n                setShowError(true)\n            }\n        }\n        setLastWindowSize(windowSize)\n        // eslint-disable-next-line\n    }, [windowSize])\n\n    return (\n        <div className={'bg-green-100'}>\n            <Modal\n                isWarning={isWarning}\n                visible={showError}\n                title={errorTitle}\n                content={errorContent}\n                onClose={setShowError}\n            />\n            <Header>\n                <div\n                    className=\"text-4xl sm:text-6xl md:text-7xl lg:text-8xl text-center object-center align-middle font-extrabold w-full h-full\">\n                    <Title>\n                        GNC Compiler Online\n                    </Title>\n                    <div className={'flex'}>\n                        <div className={'flex flex-auto'}/>\n                        <a className={'flex'} href={'https://github.com/PAN-Ziyue/GNC'}>\n                            <img className={'flex mx-auto p-1'} src={'https://img.shields.io/github/stars/PAN-Ziyue/GNC'}\n                                 alt={'GitHub Repo'}/>\n                        </a>\n                        <div className={'flex flex-auto'}/>\n                    </div>\n                </div>\n            </Header>\n            <div className={\"flex flex-auto flex-col lg:flex-row\"}>\n                <Card\n                    left={<CardLabelText>Code</CardLabelText>}\n                    right={<DropMenu\n                        widthClass={'w-44'}\n                        options={ExampleOptions}\n                        defaultOption={exampleCode}\n                        onChange={handleExampleCodeChange}\n                    />}\n                    content={\n                        <MonacoEditor\n                            defaultLanguage=\"c\"\n                            theme=\"light\"\n                            width={'100%'}\n                            onChange={editCode}\n                            value={code}\n                        />\n                        // <Editor\n                        //     value={code}\n                        //     onValueChange={editCode}\n                        //     highlight={code => highlight(code, languages.c)}\n                        //     padding={10}\n                        //     style={{\n                        //         fontFamily: 'monospace',\n                        //         fontSize: 12,\n                        //     }}\n                        // />\n                    }\n                />\n                <Card\n                    left={\n                        <div>\n                            <CardLabelText>Visualization</CardLabelText>\n                        </div>\n                    }\n                    right={\n                        <div className={'flex flex-row'}>\n                            <DropMenu\n                                widthClass={'w-40'}\n                                options={VisOptions}\n                                defaultOption={visMode}\n                                onChange={setVisMode}\n                            />\n                            <Button onClick={compile}>Compile</Button>\n                        </div>\n                    }\n                    content={\n                        <AntVTree\n                            data={(visMode.id === 1) ? parseTree : AST}\n                        />\n                    }\n                />\n                <Card\n                    left={<CardLabelText>Running Result</CardLabelText>}\n                    right={<Button>Run</Button>}\n                    content={\n                        <div>\n                            function: `main()`\n                            <br/>\n                            a: <Input/>\n                            <br/>\n                            res: 23333\n                        </div>\n                    }\n                />\n            </div>\n            <Footer>\n                <p className=\"text-xs lg:text-lg text-green-700 text-opacity-50 text-center object-center w-full\">\n                    <a href={'https://github.com/PAN-Ziyue/GNC'} className=\"no-underline hover:underline\">GNC</a> (2021)\n                    is the course project of Compilation Principle by Ziyue, MartinNose and <a\n                    href={'https://www.ncj.wiki'} className=\"no-underline hover:underline\">NCJ</a>. GNC is a recursive\n                    acronym for \"GNC's Not C-language!\"\n                </p>\n            </Footer>\n        </div>\n    );\n}\n\nexport default App;\n","export default function AST2VisualizationData(ast) {\n    let id = 0\n    const node2tree = (astNode) => {\n        let nodeList = []\n        for (const node of astNode) {\n            id += 1\n            let treeNode = {\n                id: id.toString(),\n                label: \"\",\n                attrs: {},\n                children: []\n            }\n            if (node === \"BreakStatement\" || node === \"ContinueStatement\") { // special statements\n                treeNode.label = node\n            } else for (const x in node) { // Actually there's only one entry inside\n                treeNode.label = x\n                switch (x) {\n                    // basics\n                    case \"Assignment\":\n                        const [assignOperation, leftValue, assignChildren] = node[x]\n                        treeNode.attrs = {\n                            assignOperation,\n                            leftValue\n                        }\n                        treeNode.children = node2tree([assignChildren])\n                        break\n                    case \"Identifier\":\n                        treeNode.attrs = {\n                            name: node[x]\n                        }\n                        break\n\n                    // literals\n                    case \"IntLiteral\":\n                    case \"BoolLiteral\":\n                    case \"FloatLiteral\":\n                        treeNode.attrs = {\n                            value: node[x]\n                        }\n                        break\n\n                    // declarations\n                    case \"Declaration\":\n                        const [type, name] = node[x]\n                        treeNode.attrs = {\n                            type,\n                            name\n                        }\n                        break\n                    case \"GlobalDeclaration\":\n                        const [globalType, globalName, globalAssignment] = node[x]\n                        treeNode.attrs = {\n                            type: globalType,\n                            name: globalName\n                        }\n                        treeNode.children = node2tree([globalAssignment])\n                        break\n\n                    // Expressions\n                    case \"BinaryExpression\":\n                        const [binaryOperator, lhs, rhs] = node[x]\n                        treeNode.attrs = {\n                            binaryOperator\n                        }\n                        treeNode.children = node2tree([lhs, rhs])\n                        break\n                    case \"UnaryExpression\":\n                        const [unaryOperator, unaryExpression] = node[x]\n                        treeNode.attrs = {\n                            unaryOperator\n                        }\n                        treeNode.children = node2tree([unaryExpression])\n                        break\n\n                    // functions\n                    case \"Function\":\n                        const [retType, funcName, parameters, funcChildren] = node[x]\n                        id += 1\n                        treeNode.attrs = {\n                            functionName: funcName,\n                            returnType: retType,\n                            parameters: JSON.stringify(parameters, null, 2)\n                        }\n                        treeNode.children = node2tree(funcChildren)\n                        break\n                    case \"ReturnStatement\":\n                        treeNode.children = node2tree([node[x]])\n                        break\n                    case \"FunctionCall\":\n                        const [funcCallName, funcArguments] = node[x]\n                        treeNode.attrs = {\n                            functionName: funcCallName\n                        }\n                        treeNode.children = node2tree([{Arguments: funcArguments}])\n                        break\n\n                    // flow controls & statements\n                    case \"ForStatement\":\n                        const [initClause, condition, iteration, forStatement] = node[x]\n                        treeNode.children = node2tree([{InitClause: initClause}, condition, iteration, forStatement])\n                        break\n                    case \"WhileStatement\":\n                        const [isDoWhile, whileCondition, whileStatements] = node[x]\n                        treeNode.attrs = {isDoWhile}\n                        treeNode.children = node2tree([whileCondition, whileStatements])\n                        break\n                    case \"IfStatement\": // IfStatements is visualized as a list of BlockStatements\n                    case \"InitClause\": // InitClause is a special form of BlockStatement\n                    case \"Arguments\": // FuncCallArguments is a special form of BlockStatements\n                    case \"BlockStatement\":\n                        treeNode.children = node2tree(node[x])\n                        break\n                    case \"BreakStatement\":\n                    case \"ContinueStatement\":\n                        break\n\n                    // unhandled case\n                    default:\n                        console.log(x)\n                        console.log(node[x])\n                }\n            }\n            nodeList.push(treeNode)\n        }\n        return nodeList\n    }\n    let tree = {\n        id: id.toString(),\n        label: \"GNC\",\n        attrs: {\n            remark: \"AST Root Node\"\n        },\n        children: node2tree(ast)\n    }\n    return tree\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}