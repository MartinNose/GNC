{"version":3,"sources":["components/AntVG6.js","components/Card.js","App.js","reportWebVitals.js","entrypoint.js"],"names":["AntVTree","props","ref","useRef","useState","graph","setGraph","useEffect","current","getBoundingClientRect","width","height","data","render","fitView","tmp_graph","G6","TreeGraph","container","ReactDOM","findDOMNode","linkCenter","modes","default","type","onChange","item","collapsed","getModel","defaultNode","size","anchorPoints","defaultEdge","layout","direction","getId","d","id","getHeight","getWidth","getVGap","getHGap","node","position","rotate","children","Math","PI","style","fill","stroke","label","labelCfg","offset","textAlign","display","flex","CardContainer","styled","div","attrs","className","CardItem","Card","left","right","content","Button","button","Header","header","Footer","footer","CardLabelText","span","Title","Input","input","App","code","editCode","mockASTData","parseTree","setParseTree","href","src","alt","defaultLanguage","theme","value","onClick","JSON","parse","compile_result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/3.3d07ba52.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport G6 from '@antv/g6';\n\nexport default function AntVTree(props) {\n    const style = {\n        display: 'flex',\n        flex: '1 1 auto'\n    }\n    const ref = useRef(null);\n    const [graph, setGraph] = useState(null);\n    // let graph = null;\n\n    useEffect(() => {\n        const {width, height} = ref.current.getBoundingClientRect()\n        if (!graph) {\n            // eslint-disable-next-line\n            let tmp_graph = new G6.TreeGraph({\n                container: ReactDOM.findDOMNode(ref.current),\n                width: width,\n                height: height,\n                linkCenter: true,\n                modes: {\n                    default: [\n                        {\n                            type: 'collapse-expand',\n                            onChange: function onChange(item, collapsed) {\n                                const data = item.getModel();\n                                data.collapsed = collapsed;\n                                return true;\n                            },\n                        },\n                        'drag-canvas',\n                        'zoom-canvas',\n                    ],\n                },\n                defaultNode: {\n                    size: 26,\n                    anchorPoints: [\n                        [0, 0.5],\n                        [1, 0.5],\n                    ],\n                },\n                defaultEdge: {\n                    type: 'cubic-vertical',\n                },\n                layout: {\n                    type: 'compactBox',\n                    direction: 'TB',\n                    getId: function getId(d) {\n                        return d.id;\n                    },\n                    getHeight: function getHeight() {\n                        return 16;\n                    },\n                    getWidth: function getWidth() {\n                        return 16;\n                    },\n                    getVGap: function getVGap() {\n                        return 80;\n                    },\n                    getHGap: function getHGap() {\n                        return 20;\n                    },\n                },\n            });\n            tmp_graph.node(function (node) {\n                let position = 'right';\n                let rotate = 0;\n                if (!node.children) {\n                    position = 'bottom';\n                    rotate = Math.PI / 2;\n                }\n                return {\n                    style: {\n                        fill: '#ECFDF5',\n                        stroke: '#34D399',\n                    },\n                    label: node.label,\n                    labelCfg: {\n                        position,\n                        offset: 5,\n                        style: {\n                            rotate,\n                            textAlign: 'start',\n                        },\n                    },\n                };\n            });\n            tmp_graph.data(props.data);\n            tmp_graph.render();\n            tmp_graph.fitView();\n            setGraph(tmp_graph)\n        } else {\n            graph.data(props.data);\n            graph.render();\n            graph.fitView();\n        }\n    }, [graph, props.data]);\n\n    return <div style={style} ref={ref}/>;\n}","import styled from \"styled-components\";\n\nconst CardContainer = styled.div.attrs({\n    className: \"flex flex-auto container w-full lg:w-1/3 p-2\"\n})`\n    height: 80vh;\n`;\n\nconst CardItem = styled.div.attrs({\n    className: \"flex flex-auto w-full h-full bg-white rounded-xl shadow-md overflow-hidden\"\n})``;\n\nexport function Card(props) {\n    return (\n        <CardContainer>\n            <CardItem>\n                <div className={'flex flex-auto flex-col h-full'}>\n                    <div className={'flex flex-grow-0 flex-row p-2 bg-green-600'}>\n                        {props.left}\n                        <div className={'flex flex-grow'}/>\n                        {props.right}\n                    </div>\n                    <div className={'flex flex-auto flex-row p-2'}>\n                        {props.content}\n                    </div>\n                </div>\n            </CardItem>\n        </CardContainer>\n    )\n}","import './App.css';\nimport {useState} from \"react\";\nimport styled from 'styled-components'\nimport Editor from \"@monaco-editor/react\";\nimport AntVTree from \"./components/AntVG6\";\nimport mockASTData from './components/test.json';\nimport {Card} from \"./components/Card\";\nimport {compile_result} from \"gnc\"\n\nconst Button = styled.button.attrs({\n    className: \"flex flex-grow-0 py-2 px-4 font-semibold rounded-lg shadow-md text-white bg-green-500 hover:bg-green-700\"\n})``;\n\nconst Header = styled.header.attrs({\n    className: \"flex flex-auto\"\n})`\n    height: 17vh;\n`;\n\nconst Footer = styled.footer.attrs({\n    className: \"flex flex-auto \"\n})`\n    height: 3vh;\n    min-height: 35px;\n`;\n\nconst CardLabelText = styled.span.attrs({\n    className: \"flex text-white text-3xl object-center font-bold pl-2 pt-1\"\n})``;\n\nconst Title = styled.span.attrs({\n    className: \"bg-clip-text text-transparent bg-gradient-to-r from-green-400 to-blue-500\"\n})`\n    line-height: 15vh;\n`;\n\nconst Input = styled.input.attrs({\n    className: \"text-green-900 rounded-lg shadow-md border-2 border-green-500\"\n})``;\n\nconst InitialCode = `int main (int a) {\n    return a;\n}`\n\nfunction App() {\n    const [code, editCode] = useState(InitialCode)\n    const [parseTree, setParseTree] = useState(mockASTData)\n\n    const compile = () => {\n        let data = JSON.parse(compile_result(code))\n        setParseTree(data['parse_tree'])\n    }\n\n    return (\n        <div className={'bg-green-100'}>\n            <Header>\n                <div className=\"text-4xl sm:text-6xl md:text-7xl lg:text-8xl text-center object-center align-middle font-extrabold w-full h-full\">\n                    <Title>\n                        GNC Compiler Online\n                    </Title>\n                    <a href={'https://github.com/PAN-Ziyue/GNC'}>\n                        <img className={'mx-auto flex-grow-0 p-1'} src={'https://img.shields.io/github/stars/PAN-Ziyue/GNC'} alt={'GitHub Repo'}/>\n                    </a>\n                </div>\n            </Header>\n            <div className={\"flex flex-auto flex-col lg:flex-row\"}>\n                <Card\n                    left={<CardLabelText>Code</CardLabelText>}\n                    right={<Button>Run</Button>}\n                    content={\n                        <Editor\n                            defaultLanguage=\"c\"\n                            theme=\"light\"\n                            onChange={editCode}\n                            value={code}\n                        />\n                    }\n                />\n                <Card\n                    left={\n                        <div className={'flex flex-row'}>\n                            <CardLabelText>Parse Tree</CardLabelText>\n                            <CardLabelText>/</CardLabelText>\n                            <CardLabelText className={'text-opacity-50'}>AST</CardLabelText>\n                        </div>\n                    }\n                    right={<Button onClick={compile}>Compile</Button>}\n                    content={\n                        <AntVTree\n                            data={parseTree}\n                        />\n                    }\n                />\n                <Card\n                    left={<CardLabelText>Running Result</CardLabelText>}\n                    right={<Button>Run</Button>}\n                    content={\n                        <div>\n                            function: `main()`\n                            <br/>\n                            a: <Input/>\n                            <br/>\n                            res: 23333\n                        </div>\n                    }\n                />\n            </div>\n            <Footer>\n                <p className=\"text-xs lg:text-lg text-green-700 text-opacity-50 text-center object-center w-full\">\n                    <a href={'https://github.com/PAN-Ziyue/GNC'} className=\"no-underline hover:underline\">GNC</a> (2021) is the course project of Compilation Principle by Ziyue, MartinNose and <a href={'https://www.ncj.wiki'} className=\"no-underline hover:underline\">NCJ</a>. GNC is a recursive acronym for \"GNC's Not C-language!\"\n                </p>\n            </Footer>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}